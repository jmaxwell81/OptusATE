<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="task">assignment_group=3ac476c84f2e8b048767a3b11310c72a^EQ<item display_table="sys_user_group" display_value="Optus PMSD" endquery="false" field="assignment_group" goto="false" newquery="false" operator="=" or="false" value="3ac476c84f2e8b048767a3b11310c72a"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>INC_Holding_23</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
try{
var inc=new GlideRecord('x_cio19_optus_ate_optus_ate_holding');
	inc.initialize();
	//inc.addQuery('uniqueid',current.sys_id);
//inc.addQuery('messagetype','21').addOrCondition('messagetype','23');
	//incOR.addOrCondition('x_cio19_optus_ate_reference',current.csnsticketid);
	//inc.addAggregate('COUNT');
	inc.query();
			if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
			gs.info('OPTUS ATE BR-23 B4 Updated: '+current.number+', '+current.sys_id+', '+inc.getRowCount());
			
		}
	
//	while(inc.next()){
	//	var jnl=new ATE_Helper_Functions();
	//	inc.worklog=jnl.addJournal(current.sys_id,'work_notes');

		inc.worklog=current.work_notes.getJournalEntry(1);
		/*
		var jnlwl=new GlideRecord('sys_journal_field');
		jnlwl.addQuery('element_id',current.sys_id);
		jnlwl.addQuery('element','work_notes');
		jnlwl.orderByDesc('sys_created_on');
		jnlwl.setLimit(1);
		jnlwl.query();
		if(jnlwl.next()){
			gs.info('OPTUS ATE Journal Entry Work log: '+jnlwl.value);
			var journalString=jnlwl.value;
			while(jnlwl.next()){
			
				journalString+='\n\n'+jnlwl.value;
				inc.worklog=journalString;
			
			}
		}*/
		
	//	inc.worklog=current.work_notes;
	//	inc.updatedescription=current.comments;

//var wl=current.work_notes.getJournalEntry(-1);
//var na = wl.split("\n\n");
//	inc.worklog=na;
	
	
//gets all journal entries as a string where each entry is delimited by '\n\n'
	//var na = notes.split("\n\n");    
	
/*var gr = new GlideRecord('sc_req_item');
gr.get(current.sys_id);
gr.comments = current.comments;
gr.work_notes = current.work_notes;
gr.update();
		*/
		
		
		inc.updatedescrption=current.comments.getJournalEntry(1);
	/*	var jnlc=new GlideRecord('sys_journal_field');
		jnlc.addQuery('element_id',current.sys_id);
		jnlc.addQuery('element','comments');
		jnlc.orderByDesc('sys_created_on');
		jnlc.setLimit(1);
		jnlc.query();
		if(jnlc.next()){
			
						gs.info('OPTUS ATE Journal Entry Comments: '+jnlc.value);
			var journalStringc=jnlc.value;
			while(jnlc.next()){
			
				journalStringc+='\n\n'+jnlc.value;
				inc.updatedescrption=journalStringc;
			
			}
			
		}*/
//String.prototype.toTitleCase = function () {
 //   return this.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
//};

		inc.assigned_to=current.assigned_to;
		inc.impact=current.impact;
		inc.urgency=current.urgency;
		inc.messagetype='23';
		//inc.category='Incident';//change to sys_class_name?
		var cap=new ATE_Helper_Functions();
		inc.category=cap.titlecase(current.sys_class_name.toString());
		
		//inc.category=current.sys_class_name.toString().toTitleCase;
		inc.subcategory=current.category;
		inc.customer_status=current.state;
		inc.messagestatus='Pending';
		inc.attachments=current.attachments;
		inc.closure_code=current.close_code;
		inc.csnsticketid=current.u_third_party_reference;
	inc.csnsticketstatus=current.state;
		//inc.customerticketid=current.sys_id;
		inc.customerticketid=current.number;
		
		
		
			if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
			gs.info('OPTUS ATE BR-23 Updated: '+current.number+', '+current.sys_id+', '+current.work_notes.toString()+', '+current.comments.toString()+', '+current.assigned_to+', '+ current.category +', '+ current.subcategory +', '+current.customer_status  +', '+current.messagestatus);
			
		}
		
	var inc_att = new GlideRecord('sys_attachment');
	var inc_att_doc = new GlideRecord('sys_attachment_doc');	
	inc_att.addQuery('table_sys_id',current.sys_id);
	inc_att.addQuery('table_name', current.getTableName());
	inc_att.query();
	
	if(inc_att.next()){
	inc.attachname = inc_att.file_name;
var attachname = '';
	attachname = inc_att.file_name;
	var filetype = '';
	filetype=inc_att.content_type;
	var filesize ='';
	filesize=inc_att.size_bytes;
	var contentid='';
	contentid=inc_att.getUniqueValue();
		
		

	//combine base64 encoded file and insert into holding table	
	// see https://www.servicenowguru.com/integration/sending-attachments-3rdparty-service-desk/
	var inc_docs = inc_att_doc.addJoinQuery('sys_attachment','sys_attachment');
	inc_docs.addCondition('sys_attachment', inc_att.sys_id);
	inc_att_doc.addQuery('sys_attachment', inc_att.sys_id);
	inc_att_doc.orderBy('position');
	inc_att_doc.query();
		while(inc_att_doc.next()){
			//inc21.attachments += inc_att_doc.toString();
			
		var sa = new GlideSysAttachment();
         //var binData =   sa.GlideSysAttachment(inc_att); //this is the encoded attachment. You'll need to add this somehow to your XML
		var encData =   sa.getContentBase64(inc_att);
			var att_bin_info = '';
			att_bin_info += inc_att_doc.data;
			inc.attachment_binary_information +=att_bin_info;
			var xml = "<ate:attachments><ate:attachment action=\"add\" charset=\"UTF-8\" ";
                xml += "len=\"" + filesize + "\" name=\"" + attachname + "\" ";
                xml += "type=\"" + filetype + "\" contentId=\"" + contentid + "\">";
                xml += encData;
                xml += "</ate:attachment></ate:attachments>";
			
			inc.attachments=xml;

}
				

	}	
	
	
	else{
		gs.info('OPTUS ATE 23: No Attachment');
	}

		
		
		
		
		inc.insert();
		if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
			gs.info('OPTUS ATE BR-23 After Updated: '+current.number+', '+current.sys_id);
			
		}
	
}catch(update_err){
	gs.error('OPTUS ATE Update BR-23: '+update_err);
}	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>lzs@townsville.qld.gov.au</sys_created_by>
        <sys_created_on>2018-03-13 00:02:59</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ea52f1f5dbbc930073ab787dbf961930</sys_id>
        <sys_mod_count>108</sys_mod_count>
        <sys_name>INC_Holding_23</sys_name>
        <sys_overrides/>
        <sys_package display_value="Optus ATE" source="x_cio19_optus_ate">9cf254e14fd8c3005596c61f0310c793</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Optus ATE">9cf254e14fd8c3005596c61f0310c793</sys_scope>
        <sys_update_name>sys_script_ea52f1f5dbbc930073ab787dbf961930</sys_update_name>
        <sys_updated_by>lzs@townsville.qld.gov.au</sys_updated_by>
        <sys_updated_on>2018-03-27 06:20:25</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ea52f1f5dbbc930073ab787dbf961930"/>
</record_update>
