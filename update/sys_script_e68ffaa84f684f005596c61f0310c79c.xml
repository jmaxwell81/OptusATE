<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_cio19_optus_ate_tcceventin</collection>
        <condition>current.messagetype==24</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_cio19_optus_ate_tcceventin">messagetype=24^EQ<item endquery="false" field="messagetype" goto="false" newquery="false" operator="=" or="false" value="24"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>ATE_OPT_Update_24</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
try{
	// Add your code here
	var inc_att = new GlideRecord('sys_attachment');
	var inc_att_doc = new GlideRecord('sys_attachment_doc');

	
var inc = new GlideRecord('x_cio19_optus_ate_optus_ate_holding');

//inc.initialize();
inc.addQuery('number',current.csnsticketid);
inc.query(); 
	
if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
	gs.info('OPTUS ATE BR-24 Update: '+current.csnsticketid);
}
while (inc.next()) {
	inc.messagestatus = current.messagestatus;
		//incident.addQuery('sys_id',inc_id);
	if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
	gs.info('OPTUS ATE BR-24 Update: '+inc.messagestatus);
}
	inc.update();
}
	var inc_id=inc.uniqueid;
	

	
	
	var incident = new GlideRecord('incident');
	incident.addQuery('sys_id',inc_id);
	incident.query();

	if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
		gs.info('OPTUS ATE BR-24 Ticket Update Task: '+incident.comments+', '+current.worklog+', '+current.updatedescrption+', '+inc_id);
	
	while(incident.next()){
		//Update work notes and comments
		//https://docs.servicenow.com/bundle/jakarta-platform-administration/page/administer/field-administration/concept/c_JournalFields.html
		incident.work_notes="OPTUS work notes: "+current.worklog;
		//incident.description=incident.description+' :OPTUS Update: '+current.updatedescrption;
		incident.comments="OPTUS Comments: "+current.updatedescrption;
		if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
				gs.info('OPTUS ATE Inserted comment journal: '+current.updatedescrption+', '+current.worklog);
			}
	
			
		var statmap=new GlideRecord('x_cio19_optus_ate_optus_ate_mapping');
		statmap.addQuery('u_company','Optus');
		statmap.addQuery('u_ticket_category','Incident');
		statmap.addQuery('u_source_field','Status');
		statmap.addQuery('u_source_value',current.csnsticketstatus);
		statmap.query();

		while(statmap.next()){
			incident.state=statmap.u_target_value;
		}
		//incident.closure_code=current.closure_code; //mapping
		//incident.closure_notes=current.closure_notes;
		
		incident.update();
		if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
		gs.info('OPTUS ATE BR-24 Ticket Update Task: '+incident.number+', '+incident.description+', '+incident.work_notes+', '+incident.comments+', '+current.worklog+', '+current.updatedescrption);
	}
	}
	
	//inc.update();
if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
		gs.info('OPTUS ATE BR-24 Ticket Update Holding: '+inc.number+' '+inc.uniqueid);
	}
}
}catch(hold){
	gs.error('OPTUS ATE BR-24 ERROR HOLDING: '+hold+' ' +inc.number+' '+inc.uniqueid);
}
/*try{	
var incident = new GlideRecord('incident');	
incident.addQuery('sys_id',current.cnsticketid);
	while(incident.next()){
		
		
	incident.update();
if(gs.getProperty('x_cio19_optus_ate.Debug')=='true'){
		gs.info('OPTUS ATE BR-24 Ticket Update Incident:'+incident.number+' '+incident.uniqueid);
	}
	
	 }
}catch(inc_up){
	gs.error('OPTUS ATE BR-24 Ticket Update Incident: '+inc_up);
	gs.eventQueue('x_cio19_optus_ate.alerterror',current,gs.getProperty('x_cio19_optus_ate.Alert_Notifications'),'OPTUS ATE BR-24 RESPONSE: ' +inc_up);
}	
	*/
}	

)(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>lzs@townsville.qld.gov.au</sys_created_by>
        <sys_created_on>2017-08-10 01:59:49</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e68ffaa84f684f005596c61f0310c79c</sys_id>
        <sys_mod_count>54</sys_mod_count>
        <sys_name>ATE_OPT_Update_24</sys_name>
        <sys_overrides/>
        <sys_package display_value="Optus ATE" source="x_cio19_optus_ate">9cf254e14fd8c3005596c61f0310c793</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Optus ATE">9cf254e14fd8c3005596c61f0310c793</sys_scope>
        <sys_update_name>sys_script_e68ffaa84f684f005596c61f0310c79c</sys_update_name>
        <sys_updated_by>lzs@townsville.qld.gov.au</sys_updated_by>
        <sys_updated_on>2018-03-19 04:57:19</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e68ffaa84f684f005596c61f0310c79c"/>
</record_update>
