<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_cio19_optus_ate.ATE_Helper_Functions</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>ATE_Helper_Functions</name>
        <script><![CDATA[var ATE_Helper_Functions = Class.create();
ATE_Helper_Functions.prototype = {
    initialize: function() {
    },
		     
	
	addAttachmentMuleSoft : function (rec) {
                var gsu = (typeof GlideStringUtil != 'undefined') ? (GlideStringUtil) : (Packages.com.glide.util.StringUtil);
                var gsa = (typeof GlideSysAttachment != 'undefined') ? (new GlideSysAttachment()) : (new Packages.com.glide.ui.SysAttachment());
                var lAttachmentData = gsa.getBytes(rec);
                var lAttachment = gsu.base64Encode(lAttachmentData);
                var lFilename = rec.file_name;
                var lTablename = rec.table_name;
                var lContentType = rec.content_type;
                var lSize = rec.size_bytes;
                var lID = rec.getUniqueValue();
                var xml = "<ate:attachment action=\"add\" charset=\"UTF-8\" ";
                xml += "len=\"" + lSize + "\" name=\"" + lFilename + "\" ";
                xml += "type=\"" + lContentType + "\" contentId=\"" + lID + "\">";
                xml += lAttachment;
                xml += "</ate:attachment>";
                return xml;
        },
	
	addAttachment : function (rec) {
                var gsu = (typeof GlideStringUtil != 'undefined') ? (GlideStringUtil) : (Packages.com.glide.util.StringUtil);
                var gsa = (typeof GlideSysAttachment != 'undefined') ? (new GlideSysAttachment()) : (new Packages.com.glide.ui.SysAttachment());
                var lAttachmentData = gsa.getBytes(rec);
                var lAttachment = gsu.base64Encode(lAttachmentData);
                var lFilename = rec.file_name;
                var lTablename = rec.table_name;
                var lContentType = rec.content_type;
                var lSize = rec.size_bytes;
                var lID  = rec.getUniqueValue();
                var xml = "<ns:attachment action=\"add\" charset=\"UTF-8\" ";
                xml += "len=\"" + lSize + "\" name=\"" + lFilename + "\" ";
                xml += "type=\"" + lContentType + "\" contentId=\"" + lID + "\">";
                xml += lAttachment;
                xml += "</ns:attachment>";
                return xml;
        },
	
	
	toTitleCase : function () {
   return this.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
},

    titlecase : function(str){
    var arr=[];  
    var str1=str.split(' ');
    for (var i = 0; i < str1.length; i++) {
    var upper= str1[i].charAt(0).toUpperCase()+ str1[i].substr(1);
    arr.push(upper);
     }
      return arr.join(' ');
    },
	
	
	
parseAttachments : function () {
    try {
                var xmldoc;
                gs.info("OPTUS ATE parseAttachments()","HISHAM");
        if(source.u_attachments.toString()=="<see_attachment/>"){
                        //Load the attachment data element from the sys_attachment table
                        gs.info("OPTUS ATE Load the attachment data element from the sys_attachment table","HISHAM");
                        var grAtt = new GlideRecord('sys_attachment');
                        gs.info("OPTUS ATE Querying attachment: "+source.sys_id.toString(),"HISHAM");
                        if(grAtt.get("table_sys_id",source.sys_id.toString())){
                                gs.info("OPTUS ATE Found attachment:"+grAtt.sys_id.toString(),"HISHAM");
                                
                                var gsa = new GlideSysAttachment();
                var bytesInFile = gsa.getBytes(source.sys_class_name.toString(), source.sys_id.toString());
                                gs.info("OPTUS ATE bytesInFile="+bytesInFile.length,"HISHAM");
                                
                //var dataAsString = new Packages.java.lang.String(bytesInFile);
                                
                                //var gsa = GlideSysAttachmentInputStream(grAtt.sys_id.toString());
 
                                //var baos = new Packages.java.io.ByteArrayOutputStream();
                                //gsa.writeTo(baos);
                                //baos.close();
                                //var strData=baos.toString();
                                gs.info("OPTUS ATE Attachment bytesInFile length="+bytesInFile.toString().length,"HISHAM");
                                xmldoc = new XMLDocument(bytesInFile.toString());
                        }
                        
                        
                }else{
                        xmldoc = new XMLDocument(source.u_attachments.toString());
                }
                
        var node = xmldoc.getNodes("//Attachments/*");
                
                gs.info('OPTUS ATE onAfter parseAttachments: ' + node.getLength() + ' - ' + source.u_attachments.toString());
                
        for(i=0; i < node.getLength(); i++){
 
            var attachmentNumber = i + 1;
 
            var filename = xmldoc.getNodeText("//Attachments/Attachment[" + attachmentNumber + "]/Filename");
            var filetype = xmldoc.getNodeText("//Attachments/Attachment[" + attachmentNumber + "]/Filetype");
            var filedata = xmldoc.getNodeText("//Attachments/Attachment[" + attachmentNumber + "]/Contents");
 
            createAttachment(filename, filetype, filedata);
        }
 
    } catch (e) {
        gs.info("OPTUS ATE An error occurred parsing attachment(s) into a record on the XML Incident transform map. It is " + e.message);
    }
},
 
// This function is doing (i) create the attachment (ii) Retrieve the attachment and do the flowthrough
createAttachment : function (fileName, fileType, fileData) {
 
    var StringUtil = GlideStringUtil;
    var fileDataDecoded = StringUtil.base64DecodeAsBytes(fileData);
    var tableName = target.getTableName();
    var sys_id = target.getUniqueValue();
        
        gs.info('OPTUS ATE onAfter createAttachment: ' + tableName + ' - ' + sys_id + ' - ' + fileName + ' - ' + fileType);
        
        // (i) Create the attachment
    var attachment = new Attachment();
    attachment.write(tableName, sys_id, fileName, fileType, fileDataDecoded);
        
        // (ii) Flowthrough
        if (target.assignment_group.u_ate_flow_through_method == "XML") {
                
        // This section is doing the flow through attachment from PMSD to UNISYS
        if(target.company.u_transport_method=='SQL'){
            var record = ATEIntegrationHelper.parentAttachmentRecordExists(tableName, sys_id);
 
            var miscFunc = new ATEMiscFunctions();
            var ateUsrAcct = gs.getProperty("ate_user_account");
            var attachmentRtn = miscFunc.getAttachment(tableName, sys_id, fileName, fileType, ateUsrAcct, true);
 
            var ateIntHelper = new ATEIntegrationHelper(record);
            ateIntHelper.insertSQLAttachmentBinary(attachmentRtn);
         }
		}	
},
	addJournal : function(sysid,element){
		var jnlwl=new GlideRecord('sys_journal_field');
		jnlwl.addQuery('element_id',sysid);
		jnlwl.addQuery('element',element);
		jnlwl.query();
		if(jnlwl.next()){
			gs.info('OPTUS ATE Journal Entry Work log: '+jnlwl.value);
			var journalString='';
			journalString=jnlwl.value;
			while(jnlwl.next()){
			
				journalString+='\n'+jnlwl.value;
				//inc.worklog=journalString;
				return journalstring;
			
			}
		}
	},
	
    type: 'ATE_Helper_Functions'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>lzs@townsville.qld.gov.au</sys_created_by>
        <sys_created_on>2018-03-14 23:34:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>9efe77de4f3c5300aab4a3b11310c742</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>ATE_Helper_Functions</sys_name>
        <sys_package display_value="Optus ATE" source="x_cio19_optus_ate">9cf254e14fd8c3005596c61f0310c793</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Optus ATE">9cf254e14fd8c3005596c61f0310c793</sys_scope>
        <sys_update_name>sys_script_include_9efe77de4f3c5300aab4a3b11310c742</sys_update_name>
        <sys_updated_by>lzs@townsville.qld.gov.au</sys_updated_by>
        <sys_updated_on>2018-03-21 00:28:32</sys_updated_on>
    </sys_script_include>
</record_update>
